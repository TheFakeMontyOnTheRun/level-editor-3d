/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.odb.derelict.editor;

import br.odb.gamelib.gameworld.exceptions.InvalidSlotException;
import br.odb.libscene.Sector;
import br.odb.utils.Utils;
import java.awt.Color;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;

/**
 *
 * @author monty
 */
public class ToolboxFrame extends javax.swing.JInternalFrame implements LevelEditorContextListener {

    private EditorContext currentContext;

    public EditorContext getCurrentContext() {
        return currentContext;
    }

    public void setCurrentContext(EditorContext currentContext) {
        this.currentContext = currentContext;
    }

    /**
     * Creates new form ToolboxFrame
     */
    public ToolboxFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        pnlEntity = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cboSectors = new javax.swing.JComboBox();
        cmdNewSector = new javax.swing.JButton();
        cmdDuplicateSector = new javax.swing.JButton();
        cmdDeleteSector = new javax.swing.JButton();
        txtExtraData = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        pnlFace = new javax.swing.JPanel();
        cboFaces = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cboLinkableSectors = new javax.swing.JComboBox();
        chkIsDoor = new javax.swing.JCheckBox();
        edtDecalPath = new javax.swing.JTextField();
        cmdSetDecalPath = new javax.swing.JButton();
        cmdClearPath = new javax.swing.JButton();
        pnlFaceColor = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        sldFaceColorR = new javax.swing.JSlider();
        sldFaceColorG = new javax.swing.JSlider();
        sldFaceColorB = new javax.swing.JSlider();
        pnlInfo = new javax.swing.JPanel();

        pnlEntity.setName("pnlEntity"); // NOI18N

        jLabel1.setText("Current Sector:");

        cboSectors.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboSectors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSectorsActionPerformed(evt);
            }
        });

        cmdNewSector.setLabel("New Sector");
        cmdNewSector.setName("cmdNewSector"); // NOI18N
        cmdNewSector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNewSectorActionPerformed(evt);
            }
        });

        cmdDuplicateSector.setLabel("Duplicate Sector");
        cmdDuplicateSector.setName("cmdDuplicateSector"); // NOI18N
        cmdDuplicateSector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDuplicateSectorActionPerformed(evt);
            }
        });

        cmdDeleteSector.setLabel("Delete Sector");
        cmdDeleteSector.setName("cmdDeleteSector"); // NOI18N
        cmdDeleteSector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDeleteSectorActionPerformed(evt);
            }
        });

        txtExtraData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtExtraDataActionPerformed(evt);
            }
        });

        jLabel5.setText("Extra data:");

        org.jdesktop.layout.GroupLayout pnlEntityLayout = new org.jdesktop.layout.GroupLayout(pnlEntity);
        pnlEntity.setLayout(pnlEntityLayout);
        pnlEntityLayout.setHorizontalGroup(
            pnlEntityLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlEntityLayout.createSequentialGroup()
                .addContainerGap()
                .add(pnlEntityLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(cboSectors, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(cmdNewSector, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                    .add(cmdDuplicateSector, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
                    .add(cmdDeleteSector, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(txtExtraData)
                    .add(jLabel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlEntityLayout.setVerticalGroup(
            pnlEntityLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlEntityLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cboSectors, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cmdNewSector)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cmdDuplicateSector)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cmdDeleteSector)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel5)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(txtExtraData, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(115, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Entity", pnlEntity);

        pnlFace.setName("pnlFace"); // NOI18N

        cboFaces.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NORTH(0)", "EAST(1)", "SOUTH(2)", "WEST(3)", "FLOOR(4)", "CEILING(5)" }));
        cboFaces.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboFacesActionPerformed(evt);
            }
        });

        jLabel2.setText("Face:");

        jLabel3.setText("Link:");

        cboLinkableSectors.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboLinkableSectors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLinkableSectorsActionPerformed(evt);
            }
        });

        chkIsDoor.setText("Door:");
        chkIsDoor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkIsDoorActionPerformed(evt);
            }
        });

        edtDecalPath.setEditable(false);
        edtDecalPath.setText(" - ");

        cmdSetDecalPath.setText("...");
        cmdSetDecalPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSetDecalPathActionPerformed(evt);
            }
        });

        cmdClearPath.setText("clear");
        cmdClearPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdClearPathActionPerformed(evt);
            }
        });

        pnlFaceColor.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        org.jdesktop.layout.GroupLayout pnlFaceColorLayout = new org.jdesktop.layout.GroupLayout(pnlFaceColor);
        pnlFaceColor.setLayout(pnlFaceColorLayout);
        pnlFaceColorLayout.setHorizontalGroup(
            pnlFaceColorLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );
        pnlFaceColorLayout.setVerticalGroup(
            pnlFaceColorLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 0, Short.MAX_VALUE)
        );

        jLabel4.setText("Face color:");

        sldFaceColorR.setMaximum(255);
        sldFaceColorR.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldFaceColorRStateChanged(evt);
            }
        });

        sldFaceColorG.setMaximum(255);
        sldFaceColorG.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldFaceColorGStateChanged(evt);
            }
        });

        sldFaceColorB.setMaximum(255);
        sldFaceColorB.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldFaceColorBStateChanged(evt);
            }
        });

        org.jdesktop.layout.GroupLayout pnlFaceLayout = new org.jdesktop.layout.GroupLayout(pnlFace);
        pnlFace.setLayout(pnlFaceLayout);
        pnlFaceLayout.setHorizontalGroup(
            pnlFaceLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlFaceLayout.createSequentialGroup()
                .add(pnlFaceLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnlFaceLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(pnlFaceLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(cboFaces, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(cboLinkableSectors, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(chkIsDoor, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(pnlFaceLayout.createSequentialGroup()
                                .add(edtDecalPath, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 180, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(cmdSetDecalPath, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 63, Short.MAX_VALUE)
                                .add(cmdClearPath))))
                    .add(pnlFaceLayout.createSequentialGroup()
                        .add(pnlFaceLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(sldFaceColorR, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(sldFaceColorG, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(sldFaceColorB, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(pnlFaceColor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlFaceLayout.setVerticalGroup(
            pnlFaceLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlFaceLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cboFaces, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cboLinkableSectors, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(chkIsDoor)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pnlFaceLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(edtDecalPath, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cmdSetDecalPath)
                    .add(cmdClearPath))
                .add(18, 18, 18)
                .add(pnlFaceLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(pnlFaceLayout.createSequentialGroup()
                        .add(jLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(sldFaceColorR, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(sldFaceColorG, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(sldFaceColorB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(pnlFaceColor, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Face", pnlFace);

        pnlInfo.setName("pnlInfo"); // NOI18N

        org.jdesktop.layout.GroupLayout pnlInfoLayout = new org.jdesktop.layout.GroupLayout(pnlInfo);
        pnlInfo.setLayout(pnlInfoLayout);
        pnlInfoLayout.setHorizontalGroup(
            pnlInfoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 416, Short.MAX_VALUE)
        );
        pnlInfoLayout.setVerticalGroup(
            pnlInfoLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 338, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Info", pnlInfo);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 375, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdNewSectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNewSectorActionPerformed
        currentContext.addNewSector();
    }//GEN-LAST:event_cmdNewSectorActionPerformed

    private void cboSectorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSectorsActionPerformed
        currentContext.setCurrentSectorFromId(cboSectors.getSelectedIndex());
        updateWidgets();
    }//GEN-LAST:event_cboSectorsActionPerformed

    private void cmdDuplicateSectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDuplicateSectorActionPerformed
        currentContext.duplicateCurrentSector();
    }//GEN-LAST:event_cmdDuplicateSectorActionPerformed

    private void cmdDeleteSectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDeleteSectorActionPerformed
        currentContext.deleteCurrentSector();
    }//GEN-LAST:event_cmdDeleteSectorActionPerformed

    private void cmdSetDecalPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSetDecalPathActionPerformed
        String filePath;

        fileChooser.setDialogType(JFileChooser.OPEN_DIALOG);
        fileChooser.showDialog(this, "Open");
        File file = fileChooser.getSelectedFile();

        if (file != null) {

            filePath = file.getAbsolutePath();
            this.edtDecalPath.setText(Utils.extractFilenameFrom(filePath));            
            currentContext.setCurrentSectorDecalForFace( this.cboFaces.getSelectedIndex(), edtDecalPath.getText() );
        }
    }//GEN-LAST:event_cmdSetDecalPathActionPerformed

    private void cmdClearPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdClearPathActionPerformed
    
        if ( currentContext != null )
            currentContext.setCurrentSectorDecalForFace( cboFaces.getSelectedIndex(), null );
    }//GEN-LAST:event_cmdClearPathActionPerformed

    private void sldFaceColorRStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldFaceColorRStateChanged
                    
        if ( currentContext != null ) {
            br.odb.libscene.Color c0 = currentContext.getColorFromCurrentFace( cboFaces.getSelectedIndex() );
            c0.setR( sldFaceColorR.getValue() );
            currentContext.setCurrentSectorColorForFace( cboFaces.getSelectedIndex(), c0 );
        }
    }//GEN-LAST:event_sldFaceColorRStateChanged

    private void sldFaceColorGStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldFaceColorGStateChanged
        if ( currentContext != null ) {
            br.odb.libscene.Color c0 = currentContext.getColorFromCurrentFace( cboFaces.getSelectedIndex() );
            c0.setG( sldFaceColorG.getValue() );
            currentContext.setCurrentSectorColorForFace( cboFaces.getSelectedIndex(), c0 );
        }

    }//GEN-LAST:event_sldFaceColorGStateChanged

    private void sldFaceColorBStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldFaceColorBStateChanged
        if ( currentContext != null ) {
            br.odb.libscene.Color c0 = currentContext.getColorFromCurrentFace( cboFaces.getSelectedIndex() );
            c0.setB( sldFaceColorB.getValue() );
            currentContext.setCurrentSectorColorForFace( cboFaces.getSelectedIndex(), c0 );
        }
    }//GEN-LAST:event_sldFaceColorBStateChanged

    private void chkIsDoorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkIsDoorActionPerformed

        if ( currentContext != null ) {
            
            currentContext.toggleCurrentSectorDoorAtFace( this.cboFaces.getSelectedIndex() );
        }
    }//GEN-LAST:event_chkIsDoorActionPerformed

    private void cboFacesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboFacesActionPerformed
        updateWidgets();
    }//GEN-LAST:event_cboFacesActionPerformed

    private void cboLinkableSectorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLinkableSectorsActionPerformed
     
        int sector = this.cboLinkableSectors.getSelectedIndex();
        int face = cboFaces.getSelectedIndex();
        
        if ( currentContext != null && sector >= 0 && face >= 0 ) {
            currentContext.setLinkForCurrentSector( face, sector );
        }
    }//GEN-LAST:event_cboLinkableSectorsActionPerformed

    private void txtExtraDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtExtraDataActionPerformed
        if ( currentContext != null )
            currentContext.setExtraDataForCurrentSector( this.txtExtraData.getText() );
    }//GEN-LAST:event_txtExtraDataActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cboFaces;
    private javax.swing.JComboBox cboLinkableSectors;
    private javax.swing.JComboBox cboSectors;
    private javax.swing.JCheckBox chkIsDoor;
    private javax.swing.JButton cmdClearPath;
    private javax.swing.JButton cmdDeleteSector;
    private javax.swing.JButton cmdDuplicateSector;
    private javax.swing.JButton cmdNewSector;
    private javax.swing.JButton cmdSetDecalPath;
    private javax.swing.JTextField edtDecalPath;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JPanel pnlEntity;
    private javax.swing.JPanel pnlFace;
    private javax.swing.JPanel pnlFaceColor;
    private javax.swing.JPanel pnlInfo;
    private javax.swing.JSlider sldFaceColorB;
    private javax.swing.JSlider sldFaceColorG;
    private javax.swing.JSlider sldFaceColorR;
    private javax.swing.JTextField txtExtraData;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setCurrentSector(int id) {
        this.cboSectors.setSelectedIndex(id);
    }

    private void populateComboWithSectors(JComboBox combo, EditorContext context) {

        String[] sectorList = context.getSectorNamesList();
        DefaultComboBoxModel model = new DefaultComboBoxModel( sectorList );        
        combo.setModel( model );
    }

    @Override
    public void contextModified(EditorContext context) {
        currentContext = context;
        
        int id = 0;
        int link = 0;
        
        if ( context != null && context.currentSector != null ) {
            try {
                id = currentContext.getCurrentSector().getId();
                link = currentContext.getCurrentSector().getLink( cboFaces.getSelectedIndex() );
            } catch ( InvalidSlotException ex) {
                Logger.getLogger(ToolboxFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
            
        
        this.populateComboWithSectors(this.cboSectors, context);
        this.populateComboWithSectors(this.cboLinkableSectors, context);
        
        cboSectors.setSelectedIndex( id );
        cboLinkableSectors.setSelectedIndex( link );
    }

    private void updateWidgets() {
        try {
            int currentFace = cboFaces.getSelectedIndex();
            Sector currentSector = currentContext.getCurrentSector();
            
            if ( currentSector == null ) {                
                return;
            }
                
            int link = currentSector.getLink(currentFace);
            
            if ( link >= 0 && link < cboLinkableSectors.getModel().getSize() )
                cboLinkableSectors.setSelectedIndex( link );

            br.odb.libscene.Color c0 = currentContext.getColorFromCurrentFace(currentFace);

            sldFaceColorR.setValue(c0.getR());
            sldFaceColorG.setValue(c0.getG());
            sldFaceColorB.setValue(c0.getB());

            if (currentSector.getDecalAt(currentFace) != null) {
                edtDecalPath.setText(currentSector.getDecalAt(currentFace));
            } else {
                edtDecalPath.setText("-");
            }
            
            pnlFaceColor.setBackground( new Color( c0.getR(), c0.getG(), c0.getB() ));
            chkIsDoor.setSelected( currentSector.getDoor( currentFace ) != null );
            txtExtraData.setText( currentSector.getExtraInformation() == null ? "" : currentSector.getExtraInformation() );

        } catch (  InvalidSlotException ex) {
            Logger.getLogger(ToolboxFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void willTerminateContext(EditorContext context) {
        updateWidgets();
    }
}
