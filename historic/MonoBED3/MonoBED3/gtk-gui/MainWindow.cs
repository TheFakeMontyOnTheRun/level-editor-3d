
// This file has been generated by the GUI designer. Do not modify.

public partial class MainWindow
{
	private global::Gtk.UIManager UIManager;
	private global::Gtk.Action FileAction;
	private global::Gtk.Action ToolsAction;
	private global::Gtk.Action newActionToolbar;
	private global::Gtk.Action openActionToolbar;
	private global::Gtk.Action saveActionToolbar;
	private global::Gtk.Action saveAsActionToolbar;
	private global::Gtk.Action quitAction;
	private global::Gtk.Action GenerateOptimizedBZK3;
	private global::Gtk.Action Separator;
	private global::Gtk.Action ImportOBJAsSectors;
	private global::Gtk.Action ImportBZK2;
	private global::Gtk.Action ImportCompiledMap;
	private global::Gtk.Action exportToOBJAction;
	private global::Gtk.Action Action;
	private global::Gtk.Action GenerateOptimizedBZK3Toolbar;
	private global::Gtk.Action openAction;
	private global::Gtk.Action saveAction;
	private global::Gtk.Action saveAsAction;
	private global::Gtk.Action quitAction1;
	private global::Gtk.Action dummyAction;
	private global::Gtk.Action RSVPAction;
	private global::Gtk.Action FGSAction;
	private global::Gtk.Action HelpAction;
	private global::Gtk.Action AboutAction;
	private global::Gtk.Action SearchForErrors;
	private global::Gtk.VBox vBoxMainLayout;
	private global::Gtk.MenuBar mbMainMenu;
	private global::Gtk.Toolbar tbMainToolbar;
	private global::Gtk.Table tblViewsLayout;
	private global::MonoBED3.EditViewWidget view1;
	private global::MonoBED3.EditViewWidget view2;
	private global::MonoBED3.EditViewWidget view3;
	private global::MonoBED3.EditViewWidget view4;
	
	protected virtual void Build ()
	{
		global::Stetic.Gui.Initialize (this);
		// Widget MainWindow
		this.UIManager = new global::Gtk.UIManager ();
		global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup ("Default");
		this.FileAction = new global::Gtk.Action ("FileAction", global::Mono.Unix.Catalog.GetString ("File"), null, null);
		this.FileAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("File");
		w1.Add (this.FileAction, null);
		this.ToolsAction = new global::Gtk.Action ("ToolsAction", global::Mono.Unix.Catalog.GetString ("Tools"), null, null);
		this.ToolsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Tools");
		w1.Add (this.ToolsAction, null);
		this.newActionToolbar = new global::Gtk.Action ("newActionToolbar", global::Mono.Unix.Catalog.GetString ("_New"), null, "gtk-new");
		this.newActionToolbar.ShortLabel = global::Mono.Unix.Catalog.GetString ("_New");
		w1.Add (this.newActionToolbar, null);
		this.openActionToolbar = new global::Gtk.Action ("openActionToolbar", null, null, "gtk-open");
		w1.Add (this.openActionToolbar, null);
		this.saveActionToolbar = new global::Gtk.Action ("saveActionToolbar", null, null, "gtk-save");
		w1.Add (this.saveActionToolbar, null);
		this.saveAsActionToolbar = new global::Gtk.Action ("saveAsActionToolbar", null, null, "gtk-save-as");
		w1.Add (this.saveAsActionToolbar, null);
		this.quitAction = new global::Gtk.Action ("quitAction", global::Mono.Unix.Catalog.GetString ("Quit"), null, "gtk-quit");
		this.quitAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Quit");
		w1.Add (this.quitAction, null);
		this.GenerateOptimizedBZK3 = new global::Gtk.Action ("GenerateOptimizedBZK3", global::Mono.Unix.Catalog.GetString ("Generate optimized BZK3"), null, "gtk-convert");
		this.GenerateOptimizedBZK3.ShortLabel = global::Mono.Unix.Catalog.GetString ("Export to Android (BZK3)");
		w1.Add (this.GenerateOptimizedBZK3, null);
		this.Separator = new global::Gtk.Action ("Separator", global::Mono.Unix.Catalog.GetString ("-"), null, null);
		this.Separator.ShortLabel = global::Mono.Unix.Catalog.GetString ("-");
		w1.Add (this.Separator, null);
		this.ImportOBJAsSectors = new global::Gtk.Action ("ImportOBJAsSectors", global::Mono.Unix.Catalog.GetString ("Import from Obj as substractive space"), null, "gtk-convert");
		this.ImportOBJAsSectors.ShortLabel = global::Mono.Unix.Catalog.GetString ("Import from Wavefront OBJ");
		w1.Add (this.ImportOBJAsSectors, null);
		this.ImportBZK2 = new global::Gtk.Action ("ImportBZK2", global::Mono.Unix.Catalog.GetString ("Import BZK2 XML (Maemo)"), null, "gtk-convert");
		this.ImportBZK2.ShortLabel = global::Mono.Unix.Catalog.GetString ("Import BZK2 XML (Maemo)");
		w1.Add (this.ImportBZK2, null);
		this.ImportCompiledMap = new global::Gtk.Action ("ImportCompiledMap", global::Mono.Unix.Catalog.GetString ("Import compiled BZK3"), null, "gtk-convert");
		this.ImportCompiledMap.ShortLabel = global::Mono.Unix.Catalog.GetString ("Import compiled BZK3");
		w1.Add (this.ImportCompiledMap, null);
		this.exportToOBJAction = new global::Gtk.Action ("exportToOBJAction", global::Mono.Unix.Catalog.GetString ("Export to OBJ"), null, "gtk-convert");
		this.exportToOBJAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Export to OBJ");
		w1.Add (this.exportToOBJAction, null);
		this.Action = new global::Gtk.Action ("Action", null, null, null);
		w1.Add (this.Action, null);
		this.GenerateOptimizedBZK3Toolbar = new global::Gtk.Action ("GenerateOptimizedBZK3Toolbar", null, null, "gtk-convert");
		w1.Add (this.GenerateOptimizedBZK3Toolbar, null);
		this.openAction = new global::Gtk.Action ("openAction", global::Mono.Unix.Catalog.GetString ("Open"), null, "gtk-open");
		this.openAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Open");
		w1.Add (this.openAction, null);
		this.saveAction = new global::Gtk.Action ("saveAction", global::Mono.Unix.Catalog.GetString ("Save"), null, "gtk-save");
		this.saveAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Save");
		w1.Add (this.saveAction, null);
		this.saveAsAction = new global::Gtk.Action ("saveAsAction", global::Mono.Unix.Catalog.GetString ("Save as..."), null, "gtk-save-as");
		this.saveAsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Save as...");
		w1.Add (this.saveAsAction, null);
		this.quitAction1 = new global::Gtk.Action ("quitAction1", global::Mono.Unix.Catalog.GetString ("Quit"), null, "gtk-quit");
		this.quitAction1.ShortLabel = global::Mono.Unix.Catalog.GetString ("Quit");
		w1.Add (this.quitAction1, null);
		this.dummyAction = new global::Gtk.Action ("dummyAction", global::Mono.Unix.Catalog.GetString ("dummy"), null, null);
		this.dummyAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("dummy");
		w1.Add (this.dummyAction, null);
		this.RSVPAction = new global::Gtk.Action ("RSVPAction", global::Mono.Unix.Catalog.GetString ("RSVP"), null, null);
		this.RSVPAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("RSVP");
		w1.Add (this.RSVPAction, null);
		this.FGSAction = new global::Gtk.Action ("FGSAction", global::Mono.Unix.Catalog.GetString ("FGS"), null, null);
		this.FGSAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("FGS");
		w1.Add (this.FGSAction, null);
		this.HelpAction = new global::Gtk.Action ("HelpAction", global::Mono.Unix.Catalog.GetString ("Help"), null, null);
		this.HelpAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Help");
		w1.Add (this.HelpAction, null);
		this.AboutAction = new global::Gtk.Action ("AboutAction", global::Mono.Unix.Catalog.GetString ("About"), null, null);
		this.AboutAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("About");
		w1.Add (this.AboutAction, null);
		this.SearchForErrors = new global::Gtk.Action ("SearchForErrors", global::Mono.Unix.Catalog.GetString ("Search for Errors and Warnings"), null, "gtk-find");
		this.SearchForErrors.ShortLabel = global::Mono.Unix.Catalog.GetString ("Search for Errors and Warnings");
		w1.Add (this.SearchForErrors, null);
		this.UIManager.InsertActionGroup (w1, 0);
		this.AddAccelGroup (this.UIManager.AccelGroup);
		this.Name = "MainWindow";
		this.Title = global::Mono.Unix.Catalog.GetString ("MonoBED3 - new");
		this.WindowPosition = ((global::Gtk.WindowPosition)(4));
		this.AllowShrink = true;
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.vBoxMainLayout = new global::Gtk.VBox ();
		this.vBoxMainLayout.Name = "vBoxMainLayout";
		this.vBoxMainLayout.Spacing = 6;
		// Container child vBoxMainLayout.Gtk.Box+BoxChild
		this.UIManager.AddUiFromString ("<ui><menubar name='mbMainMenu'><menu name='FileAction' action='FileAction'><menuitem name='newActionToolbar' action='newActionToolbar'/><menuitem name='openAction' action='openAction'/><menuitem name='saveAction' action='saveAction'/><menuitem name='saveAsAction' action='saveAsAction'/><menuitem name='quitAction' action='quitAction'/></menu><menu name='ToolsAction' action='ToolsAction'><menuitem name='ImportBZK2' action='ImportBZK2'/><menuitem name='ImportOBJAsSectors' action='ImportOBJAsSectors'/><menuitem name='ImportCompiledMap' action='ImportCompiledMap'/><menuitem name='exportToOBJAction' action='exportToOBJAction'/><menuitem name='SearchForErrors' action='SearchForErrors'/></menu><menu name='HelpAction' action='HelpAction'><menuitem name='AboutAction' action='AboutAction'/></menu></menubar></ui>");
		this.mbMainMenu = ((global::Gtk.MenuBar)(this.UIManager.GetWidget ("/mbMainMenu")));
		this.mbMainMenu.Name = "mbMainMenu";
		this.vBoxMainLayout.Add (this.mbMainMenu);
		global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vBoxMainLayout [this.mbMainMenu]));
		w2.Position = 0;
		w2.Expand = false;
		w2.Fill = false;
		// Container child vBoxMainLayout.Gtk.Box+BoxChild
		this.UIManager.AddUiFromString ("<ui><toolbar name='tbMainToolbar'><toolitem name='newActionToolbar' action='newActionToolbar'/><toolitem name='openActionToolbar' action='openActionToolbar'/><toolitem name='saveActionToolbar' action='saveActionToolbar'/><toolitem name='saveAsActionToolbar' action='saveAsActionToolbar'/></toolbar></ui>");
		this.tbMainToolbar = ((global::Gtk.Toolbar)(this.UIManager.GetWidget ("/tbMainToolbar")));
		this.tbMainToolbar.Name = "tbMainToolbar";
		this.tbMainToolbar.ShowArrow = false;
		this.tbMainToolbar.ToolbarStyle = ((global::Gtk.ToolbarStyle)(0));
		this.tbMainToolbar.IconSize = ((global::Gtk.IconSize)(3));
		this.vBoxMainLayout.Add (this.tbMainToolbar);
		global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.vBoxMainLayout [this.tbMainToolbar]));
		w3.Position = 1;
		w3.Expand = false;
		w3.Fill = false;
		// Container child vBoxMainLayout.Gtk.Box+BoxChild
		this.tblViewsLayout = new global::Gtk.Table (((uint)(2)), ((uint)(2)), true);
		this.tblViewsLayout.Name = "tblViewsLayout";
		this.tblViewsLayout.RowSpacing = ((uint)(6));
		this.tblViewsLayout.ColumnSpacing = ((uint)(6));
		// Container child tblViewsLayout.Gtk.Table+TableChild
		this.view1 = new global::MonoBED3.EditViewWidget ();
		this.view1.Events = ((global::Gdk.EventMask)(256));
		this.view1.Name = "view1";
		this.tblViewsLayout.Add (this.view1);
		global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.tblViewsLayout [this.view1]));
		w4.XOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tblViewsLayout.Gtk.Table+TableChild
		this.view2 = new global::MonoBED3.EditViewWidget ();
		this.view2.Events = ((global::Gdk.EventMask)(256));
		this.view2.Name = "view2";
		this.tblViewsLayout.Add (this.view2);
		global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.tblViewsLayout [this.view2]));
		w5.LeftAttach = ((uint)(1));
		w5.RightAttach = ((uint)(2));
		w5.XOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tblViewsLayout.Gtk.Table+TableChild
		this.view3 = new global::MonoBED3.EditViewWidget ();
		this.view3.Events = ((global::Gdk.EventMask)(256));
		this.view3.Name = "view3";
		this.tblViewsLayout.Add (this.view3);
		global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.tblViewsLayout [this.view3]));
		w6.TopAttach = ((uint)(1));
		w6.BottomAttach = ((uint)(2));
		w6.XOptions = ((global::Gtk.AttachOptions)(4));
		// Container child tblViewsLayout.Gtk.Table+TableChild
		this.view4 = new global::MonoBED3.EditViewWidget ();
		this.view4.Events = ((global::Gdk.EventMask)(256));
		this.view4.Name = "view4";
		this.tblViewsLayout.Add (this.view4);
		global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.tblViewsLayout [this.view4]));
		w7.TopAttach = ((uint)(1));
		w7.BottomAttach = ((uint)(2));
		w7.LeftAttach = ((uint)(1));
		w7.RightAttach = ((uint)(2));
		w7.XOptions = ((global::Gtk.AttachOptions)(4));
		this.vBoxMainLayout.Add (this.tblViewsLayout);
		global::Gtk.Box.BoxChild w8 = ((global::Gtk.Box.BoxChild)(this.vBoxMainLayout [this.tblViewsLayout]));
		w8.Position = 2;
		this.Add (this.vBoxMainLayout);
		if ((this.Child != null)) {
			this.Child.ShowAll ();
		}
		this.DefaultWidth = 992;
		this.DefaultHeight = 411;
		this.Show ();
		this.ExposeEvent += new global::Gtk.ExposeEventHandler (this.OnExposeEvent);
		this.DestroyEvent += new global::Gtk.DestroyEventHandler (this.OnDestroyEvent);
		this.DeleteEvent += new global::Gtk.DeleteEventHandler (this.OnDeleteEvent);
		this.newActionToolbar.Activated += new global::System.EventHandler (this.OnNewActionActivated);
		this.openActionToolbar.Activated += new global::System.EventHandler (this.OnOpenActionActivated);
		this.saveActionToolbar.Activated += new global::System.EventHandler (this.OnSaveActionActivated);
		this.saveAsActionToolbar.Activated += new global::System.EventHandler (this.OnSaveAsActionActivated);
		this.quitAction.Activated += new global::System.EventHandler (this.OnQuitActionActivated);
		this.GenerateOptimizedBZK3.Activated += new global::System.EventHandler (this.OnGenerateOptimizedBZK3);
		this.ImportOBJAsSectors.Activated += new global::System.EventHandler (this.OnPropertiesAction1Activated);
		this.ImportBZK2.Activated += new global::System.EventHandler (this.OnImportBZK2WithDialogChooser);
		this.ImportCompiledMap.Activated += new global::System.EventHandler (this.OnImportCompiledMapActivated);
		this.exportToOBJAction.Activated += new global::System.EventHandler (this.OnExportOBJFile);
		this.GenerateOptimizedBZK3Toolbar.Activated += new global::System.EventHandler (this.OnGenerateOptimizedBZK3ToolbarActivated);
		this.openAction.Activated += new global::System.EventHandler (this.OnOpenActionActivated);
		this.saveAction.Activated += new global::System.EventHandler (this.OnSaveActionActivated);
		this.saveAsAction.Activated += new global::System.EventHandler (this.OnSaveAsActionActivated);
		this.quitAction1.Activated += new global::System.EventHandler (this.OnQuitActionActivated);
		this.AboutAction.Activated += new global::System.EventHandler (this.OnAboutActionActivated);
		this.SearchForErrors.Activated += new global::System.EventHandler (this.OnFindActionActivated);
	}
}
