
// This file has been generated by the GUI designer. Do not modify.
namespace MonoBED3
{
	public partial class PaletteWidget
	{
		private global::Gtk.Notebook paletteNotebook;
		private global::Gtk.Table table1;
		private global::Gtk.Button btnBrowseForMapsToLink;
		private global::Gtk.Button btnCreateEntity;
		private global::Gtk.Button btnDeleteEntity;
		private global::Gtk.Button btnDeleteMapLink;
		private global::Gtk.ComboBoxEntry cboEntities;
		private global::Gtk.ComboBox cmbEditMode;
		private global::Gtk.Entry edtLinkPath;
		private global::Gtk.Entry entExtraData;
		private global::Gtk.Label label6;
		private global::Gtk.Button lblDuplicateEntity;
		private global::Gtk.Label lblEditMode;
		private global::Gtk.Label lblExtraData;
		private global::Gtk.Label lblSelectEntity;
		private global::Gtk.Label lblEditEntityPane;
		private global::Gtk.Table table2;
		private global::Gtk.Button btnBrowseForDecals;
		private global::Gtk.Button btnDeleteFaceLink;
		private global::Gtk.ComboBox cboLink;
		private global::Gtk.CheckButton chkIsDoor;
		private global::Gtk.ComboBox cmbSelectFace;
		private global::Gtk.Entry edtDecalPath;
		private global::Gtk.ColorButton FaceColorBtn;
		private global::Gtk.Label lblColor;
		private global::Gtk.Label lblCurrentFace;
		private global::Gtk.Label lblDecal;
		private global::Gtk.Label lblFaceLink;
		private global::Gtk.Button lblRemoveDecal;
		private global::Gtk.Label lblFacePane;
		private global::Gtk.Table table6;
		private global::Gtk.Button btnAddLampActor;
		private global::Gtk.Label lblCeilingHeight;
		private global::Gtk.Label lblFloorHeight;
		private global::Gtk.Label lblInternalLightning;
		private global::Gtk.SpinButton spnCeilingHeight;
		private global::Gtk.SpinButton spnFloorHeight;
		private global::Gtk.SpinButton spnInternalLightning;
		private global::Gtk.Label lblGeom;
		private global::Gtk.Table table3;
		private global::Gtk.Label label2;
		private global::Gtk.Label label3;
		private global::Gtk.Label label4;
		private global::Gtk.Label label5;
		private global::Gtk.SpinButton spnCursorX;
		private global::Gtk.SpinButton spnCursorY;
		private global::Gtk.SpinButton spnCursorZ;
		private global::Gtk.Label label1;
		
		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget MonoBED3.PaletteWidget
			global::Stetic.BinContainer.Attach (this);
			this.Name = "MonoBED3.PaletteWidget";
			// Container child MonoBED3.PaletteWidget.Gtk.Container+ContainerChild
			this.paletteNotebook = new global::Gtk.Notebook ();
			this.paletteNotebook.WidthRequest = 512;
			this.paletteNotebook.HeightRequest = 255;
			this.paletteNotebook.CanFocus = true;
			this.paletteNotebook.Name = "paletteNotebook";
			this.paletteNotebook.CurrentPage = 0;
			// Container child paletteNotebook.Gtk.Notebook+NotebookChild
			this.table1 = new global::Gtk.Table (((uint)(4)), ((uint)(4)), false);
			this.table1.Name = "table1";
			this.table1.RowSpacing = ((uint)(6));
			this.table1.ColumnSpacing = ((uint)(6));
			// Container child table1.Gtk.Table+TableChild
			this.btnBrowseForMapsToLink = new global::Gtk.Button ();
			this.btnBrowseForMapsToLink.CanFocus = true;
			this.btnBrowseForMapsToLink.Name = "btnBrowseForMapsToLink";
			this.btnBrowseForMapsToLink.UseUnderline = true;
			this.btnBrowseForMapsToLink.Label = global::Mono.Unix.Catalog.GetString ("...");
			this.table1.Add (this.btnBrowseForMapsToLink);
			global::Gtk.Table.TableChild w1 = ((global::Gtk.Table.TableChild)(this.table1 [this.btnBrowseForMapsToLink]));
			w1.TopAttach = ((uint)(2));
			w1.BottomAttach = ((uint)(3));
			w1.LeftAttach = ((uint)(2));
			w1.RightAttach = ((uint)(3));
			w1.XOptions = ((global::Gtk.AttachOptions)(4));
			w1.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.btnCreateEntity = new global::Gtk.Button ();
			this.btnCreateEntity.CanFocus = true;
			this.btnCreateEntity.Name = "btnCreateEntity";
			this.btnCreateEntity.UseUnderline = true;
			// Container child btnCreateEntity.Gtk.Container+ContainerChild
			global::Gtk.Alignment w2 = new global::Gtk.Alignment (0.5F, 0.5F, 0F, 0F);
			// Container child GtkAlignment.Gtk.Container+ContainerChild
			global::Gtk.HBox w3 = new global::Gtk.HBox ();
			w3.Spacing = 2;
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Image w4 = new global::Gtk.Image ();
			w4.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-add", global::Gtk.IconSize.Menu);
			w3.Add (w4);
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Label w6 = new global::Gtk.Label ();
			w6.LabelProp = global::Mono.Unix.Catalog.GetString ("Create");
			w6.UseUnderline = true;
			w3.Add (w6);
			w2.Add (w3);
			this.btnCreateEntity.Add (w2);
			this.table1.Add (this.btnCreateEntity);
			global::Gtk.Table.TableChild w10 = ((global::Gtk.Table.TableChild)(this.table1 [this.btnCreateEntity]));
			w10.LeftAttach = ((uint)(2));
			w10.RightAttach = ((uint)(3));
			w10.XOptions = ((global::Gtk.AttachOptions)(4));
			w10.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.btnDeleteEntity = new global::Gtk.Button ();
			this.btnDeleteEntity.CanFocus = true;
			this.btnDeleteEntity.Name = "btnDeleteEntity";
			this.btnDeleteEntity.UseUnderline = true;
			// Container child btnDeleteEntity.Gtk.Container+ContainerChild
			global::Gtk.Alignment w11 = new global::Gtk.Alignment (0.5F, 0.5F, 0F, 0F);
			// Container child GtkAlignment.Gtk.Container+ContainerChild
			global::Gtk.HBox w12 = new global::Gtk.HBox ();
			w12.Spacing = 2;
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Image w13 = new global::Gtk.Image ();
			w13.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-delete", global::Gtk.IconSize.Menu);
			w12.Add (w13);
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Label w15 = new global::Gtk.Label ();
			w15.LabelProp = global::Mono.Unix.Catalog.GetString ("Delete");
			w15.UseUnderline = true;
			w12.Add (w15);
			w11.Add (w12);
			this.btnDeleteEntity.Add (w11);
			this.table1.Add (this.btnDeleteEntity);
			global::Gtk.Table.TableChild w19 = ((global::Gtk.Table.TableChild)(this.table1 [this.btnDeleteEntity]));
			w19.LeftAttach = ((uint)(3));
			w19.RightAttach = ((uint)(4));
			w19.XOptions = ((global::Gtk.AttachOptions)(4));
			w19.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.btnDeleteMapLink = new global::Gtk.Button ();
			this.btnDeleteMapLink.CanFocus = true;
			this.btnDeleteMapLink.Name = "btnDeleteMapLink";
			this.btnDeleteMapLink.UseUnderline = true;
			// Container child btnDeleteMapLink.Gtk.Container+ContainerChild
			global::Gtk.Alignment w20 = new global::Gtk.Alignment (0.5F, 0.5F, 0F, 0F);
			// Container child GtkAlignment.Gtk.Container+ContainerChild
			global::Gtk.HBox w21 = new global::Gtk.HBox ();
			w21.Spacing = 2;
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Image w22 = new global::Gtk.Image ();
			w22.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-delete", global::Gtk.IconSize.Menu);
			w21.Add (w22);
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Label w24 = new global::Gtk.Label ();
			w24.LabelProp = global::Mono.Unix.Catalog.GetString ("Clear");
			w24.UseUnderline = true;
			w21.Add (w24);
			w20.Add (w21);
			this.btnDeleteMapLink.Add (w20);
			this.table1.Add (this.btnDeleteMapLink);
			global::Gtk.Table.TableChild w28 = ((global::Gtk.Table.TableChild)(this.table1 [this.btnDeleteMapLink]));
			w28.TopAttach = ((uint)(2));
			w28.BottomAttach = ((uint)(3));
			w28.LeftAttach = ((uint)(3));
			w28.RightAttach = ((uint)(4));
			w28.XOptions = ((global::Gtk.AttachOptions)(4));
			w28.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.cboEntities = global::Gtk.ComboBoxEntry.NewText ();
			this.cboEntities.Name = "cboEntities";
			this.table1.Add (this.cboEntities);
			global::Gtk.Table.TableChild w29 = ((global::Gtk.Table.TableChild)(this.table1 [this.cboEntities]));
			w29.LeftAttach = ((uint)(1));
			w29.RightAttach = ((uint)(2));
			w29.XOptions = ((global::Gtk.AttachOptions)(4));
			w29.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.cmbEditMode = global::Gtk.ComboBox.NewText ();
			this.cmbEditMode.AppendText (global::Mono.Unix.Catalog.GetString ("Move"));
			this.cmbEditMode.AppendText (global::Mono.Unix.Catalog.GetString ("Resize"));
			this.cmbEditMode.Name = "cmbEditMode";
			this.cmbEditMode.Active = 0;
			this.table1.Add (this.cmbEditMode);
			global::Gtk.Table.TableChild w30 = ((global::Gtk.Table.TableChild)(this.table1 [this.cmbEditMode]));
			w30.TopAttach = ((uint)(1));
			w30.BottomAttach = ((uint)(2));
			w30.LeftAttach = ((uint)(1));
			w30.RightAttach = ((uint)(2));
			w30.XOptions = ((global::Gtk.AttachOptions)(4));
			w30.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.edtLinkPath = new global::Gtk.Entry ();
			this.edtLinkPath.Sensitive = false;
			this.edtLinkPath.CanFocus = true;
			this.edtLinkPath.Name = "edtLinkPath";
			this.edtLinkPath.IsEditable = true;
			this.edtLinkPath.InvisibleChar = '•';
			this.table1.Add (this.edtLinkPath);
			global::Gtk.Table.TableChild w31 = ((global::Gtk.Table.TableChild)(this.table1 [this.edtLinkPath]));
			w31.TopAttach = ((uint)(2));
			w31.BottomAttach = ((uint)(3));
			w31.LeftAttach = ((uint)(1));
			w31.RightAttach = ((uint)(2));
			w31.XOptions = ((global::Gtk.AttachOptions)(4));
			w31.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.entExtraData = new global::Gtk.Entry ();
			this.entExtraData.CanFocus = true;
			this.entExtraData.Name = "entExtraData";
			this.entExtraData.IsEditable = true;
			this.entExtraData.InvisibleChar = '●';
			this.table1.Add (this.entExtraData);
			global::Gtk.Table.TableChild w32 = ((global::Gtk.Table.TableChild)(this.table1 [this.entExtraData]));
			w32.TopAttach = ((uint)(3));
			w32.BottomAttach = ((uint)(4));
			w32.LeftAttach = ((uint)(1));
			w32.RightAttach = ((uint)(2));
			w32.XOptions = ((global::Gtk.AttachOptions)(4));
			w32.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label6 = new global::Gtk.Label ();
			this.label6.Name = "label6";
			this.label6.LabelProp = global::Mono.Unix.Catalog.GetString ("Map link:");
			this.table1.Add (this.label6);
			global::Gtk.Table.TableChild w33 = ((global::Gtk.Table.TableChild)(this.table1 [this.label6]));
			w33.TopAttach = ((uint)(2));
			w33.BottomAttach = ((uint)(3));
			w33.XOptions = ((global::Gtk.AttachOptions)(4));
			w33.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.lblDuplicateEntity = new global::Gtk.Button ();
			this.lblDuplicateEntity.CanFocus = true;
			this.lblDuplicateEntity.Name = "lblDuplicateEntity";
			this.lblDuplicateEntity.UseUnderline = true;
			// Container child lblDuplicateEntity.Gtk.Container+ContainerChild
			global::Gtk.Alignment w34 = new global::Gtk.Alignment (0.5F, 0.5F, 0F, 0F);
			// Container child GtkAlignment.Gtk.Container+ContainerChild
			global::Gtk.HBox w35 = new global::Gtk.HBox ();
			w35.Spacing = 2;
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Image w36 = new global::Gtk.Image ();
			w36.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-dnd-multiple", global::Gtk.IconSize.Menu);
			w35.Add (w36);
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Label w38 = new global::Gtk.Label ();
			w38.LabelProp = global::Mono.Unix.Catalog.GetString ("Duplicate");
			w38.UseUnderline = true;
			w35.Add (w38);
			w34.Add (w35);
			this.lblDuplicateEntity.Add (w34);
			this.table1.Add (this.lblDuplicateEntity);
			global::Gtk.Table.TableChild w42 = ((global::Gtk.Table.TableChild)(this.table1 [this.lblDuplicateEntity]));
			w42.TopAttach = ((uint)(1));
			w42.BottomAttach = ((uint)(2));
			w42.LeftAttach = ((uint)(2));
			w42.RightAttach = ((uint)(3));
			w42.XOptions = ((global::Gtk.AttachOptions)(4));
			w42.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.lblEditMode = new global::Gtk.Label ();
			this.lblEditMode.Name = "lblEditMode";
			this.lblEditMode.LabelProp = global::Mono.Unix.Catalog.GetString ("Edit Mode:");
			this.table1.Add (this.lblEditMode);
			global::Gtk.Table.TableChild w43 = ((global::Gtk.Table.TableChild)(this.table1 [this.lblEditMode]));
			w43.TopAttach = ((uint)(1));
			w43.BottomAttach = ((uint)(2));
			w43.XOptions = ((global::Gtk.AttachOptions)(4));
			w43.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.lblExtraData = new global::Gtk.Label ();
			this.lblExtraData.Name = "lblExtraData";
			this.lblExtraData.LabelProp = global::Mono.Unix.Catalog.GetString ("Extra data:");
			this.table1.Add (this.lblExtraData);
			global::Gtk.Table.TableChild w44 = ((global::Gtk.Table.TableChild)(this.table1 [this.lblExtraData]));
			w44.TopAttach = ((uint)(3));
			w44.BottomAttach = ((uint)(4));
			w44.XOptions = ((global::Gtk.AttachOptions)(4));
			w44.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.lblSelectEntity = new global::Gtk.Label ();
			this.lblSelectEntity.Name = "lblSelectEntity";
			this.lblSelectEntity.LabelProp = global::Mono.Unix.Catalog.GetString ("Current:");
			this.table1.Add (this.lblSelectEntity);
			global::Gtk.Table.TableChild w45 = ((global::Gtk.Table.TableChild)(this.table1 [this.lblSelectEntity]));
			w45.XOptions = ((global::Gtk.AttachOptions)(4));
			w45.YOptions = ((global::Gtk.AttachOptions)(4));
			this.paletteNotebook.Add (this.table1);
			// Notebook tab
			this.lblEditEntityPane = new global::Gtk.Label ();
			this.lblEditEntityPane.Name = "lblEditEntityPane";
			this.lblEditEntityPane.LabelProp = global::Mono.Unix.Catalog.GetString ("Entity");
			this.paletteNotebook.SetTabLabel (this.table1, this.lblEditEntityPane);
			this.lblEditEntityPane.ShowAll ();
			// Container child paletteNotebook.Gtk.Notebook+NotebookChild
			this.table2 = new global::Gtk.Table (((uint)(4)), ((uint)(3)), false);
			this.table2.Name = "table2";
			this.table2.RowSpacing = ((uint)(6));
			this.table2.ColumnSpacing = ((uint)(6));
			// Container child table2.Gtk.Table+TableChild
			this.btnBrowseForDecals = new global::Gtk.Button ();
			this.btnBrowseForDecals.CanFocus = true;
			this.btnBrowseForDecals.Name = "btnBrowseForDecals";
			this.btnBrowseForDecals.UseUnderline = true;
			this.btnBrowseForDecals.Label = global::Mono.Unix.Catalog.GetString ("...");
			this.table2.Add (this.btnBrowseForDecals);
			global::Gtk.Table.TableChild w47 = ((global::Gtk.Table.TableChild)(this.table2 [this.btnBrowseForDecals]));
			w47.TopAttach = ((uint)(3));
			w47.BottomAttach = ((uint)(4));
			w47.LeftAttach = ((uint)(2));
			w47.RightAttach = ((uint)(3));
			w47.XOptions = ((global::Gtk.AttachOptions)(4));
			w47.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.btnDeleteFaceLink = new global::Gtk.Button ();
			this.btnDeleteFaceLink.CanFocus = true;
			this.btnDeleteFaceLink.Name = "btnDeleteFaceLink";
			this.btnDeleteFaceLink.UseUnderline = true;
			this.btnDeleteFaceLink.Label = global::Mono.Unix.Catalog.GetString ("Clear");
			this.table2.Add (this.btnDeleteFaceLink);
			global::Gtk.Table.TableChild w48 = ((global::Gtk.Table.TableChild)(this.table2 [this.btnDeleteFaceLink]));
			w48.TopAttach = ((uint)(2));
			w48.BottomAttach = ((uint)(3));
			w48.LeftAttach = ((uint)(2));
			w48.RightAttach = ((uint)(3));
			w48.XOptions = ((global::Gtk.AttachOptions)(4));
			w48.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.cboLink = global::Gtk.ComboBox.NewText ();
			this.cboLink.Name = "cboLink";
			this.table2.Add (this.cboLink);
			global::Gtk.Table.TableChild w49 = ((global::Gtk.Table.TableChild)(this.table2 [this.cboLink]));
			w49.TopAttach = ((uint)(2));
			w49.BottomAttach = ((uint)(3));
			w49.LeftAttach = ((uint)(1));
			w49.RightAttach = ((uint)(2));
			w49.XOptions = ((global::Gtk.AttachOptions)(4));
			w49.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.chkIsDoor = new global::Gtk.CheckButton ();
			this.chkIsDoor.CanFocus = true;
			this.chkIsDoor.Name = "chkIsDoor";
			this.chkIsDoor.Label = global::Mono.Unix.Catalog.GetString ("Is door?");
			this.chkIsDoor.DrawIndicator = true;
			this.chkIsDoor.UseUnderline = true;
			this.table2.Add (this.chkIsDoor);
			global::Gtk.Table.TableChild w50 = ((global::Gtk.Table.TableChild)(this.table2 [this.chkIsDoor]));
			w50.TopAttach = ((uint)(1));
			w50.BottomAttach = ((uint)(2));
			w50.LeftAttach = ((uint)(2));
			w50.RightAttach = ((uint)(3));
			w50.XOptions = ((global::Gtk.AttachOptions)(4));
			w50.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.cmbSelectFace = global::Gtk.ComboBox.NewText ();
			this.cmbSelectFace.AppendText (global::Mono.Unix.Catalog.GetString ("North"));
			this.cmbSelectFace.AppendText (global::Mono.Unix.Catalog.GetString ("East"));
			this.cmbSelectFace.AppendText (global::Mono.Unix.Catalog.GetString ("South"));
			this.cmbSelectFace.AppendText (global::Mono.Unix.Catalog.GetString ("West"));
			this.cmbSelectFace.AppendText (global::Mono.Unix.Catalog.GetString ("Floor"));
			this.cmbSelectFace.AppendText (global::Mono.Unix.Catalog.GetString ("Ceiling"));
			this.cmbSelectFace.Name = "cmbSelectFace";
			this.cmbSelectFace.Active = 0;
			this.table2.Add (this.cmbSelectFace);
			global::Gtk.Table.TableChild w51 = ((global::Gtk.Table.TableChild)(this.table2 [this.cmbSelectFace]));
			w51.LeftAttach = ((uint)(1));
			w51.RightAttach = ((uint)(2));
			w51.XOptions = ((global::Gtk.AttachOptions)(4));
			w51.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.edtDecalPath = new global::Gtk.Entry ();
			this.edtDecalPath.Sensitive = false;
			this.edtDecalPath.CanFocus = true;
			this.edtDecalPath.Name = "edtDecalPath";
			this.edtDecalPath.IsEditable = true;
			this.edtDecalPath.InvisibleChar = '•';
			this.table2.Add (this.edtDecalPath);
			global::Gtk.Table.TableChild w52 = ((global::Gtk.Table.TableChild)(this.table2 [this.edtDecalPath]));
			w52.TopAttach = ((uint)(3));
			w52.BottomAttach = ((uint)(4));
			w52.LeftAttach = ((uint)(1));
			w52.RightAttach = ((uint)(2));
			w52.XOptions = ((global::Gtk.AttachOptions)(4));
			w52.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.FaceColorBtn = new global::Gtk.ColorButton ();
			this.FaceColorBtn.CanFocus = true;
			this.FaceColorBtn.Events = ((global::Gdk.EventMask)(784));
			this.FaceColorBtn.Name = "FaceColorBtn";
			this.table2.Add (this.FaceColorBtn);
			global::Gtk.Table.TableChild w53 = ((global::Gtk.Table.TableChild)(this.table2 [this.FaceColorBtn]));
			w53.TopAttach = ((uint)(1));
			w53.BottomAttach = ((uint)(2));
			w53.LeftAttach = ((uint)(1));
			w53.RightAttach = ((uint)(2));
			w53.XOptions = ((global::Gtk.AttachOptions)(4));
			w53.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.lblColor = new global::Gtk.Label ();
			this.lblColor.Name = "lblColor";
			this.lblColor.LabelProp = global::Mono.Unix.Catalog.GetString ("Face color:");
			this.table2.Add (this.lblColor);
			global::Gtk.Table.TableChild w54 = ((global::Gtk.Table.TableChild)(this.table2 [this.lblColor]));
			w54.TopAttach = ((uint)(1));
			w54.BottomAttach = ((uint)(2));
			w54.XOptions = ((global::Gtk.AttachOptions)(4));
			w54.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.lblCurrentFace = new global::Gtk.Label ();
			this.lblCurrentFace.Name = "lblCurrentFace";
			this.lblCurrentFace.LabelProp = global::Mono.Unix.Catalog.GetString ("Face:");
			this.table2.Add (this.lblCurrentFace);
			global::Gtk.Table.TableChild w55 = ((global::Gtk.Table.TableChild)(this.table2 [this.lblCurrentFace]));
			w55.XOptions = ((global::Gtk.AttachOptions)(4));
			w55.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.lblDecal = new global::Gtk.Label ();
			this.lblDecal.Name = "lblDecal";
			this.lblDecal.LabelProp = global::Mono.Unix.Catalog.GetString ("Decal:");
			this.table2.Add (this.lblDecal);
			global::Gtk.Table.TableChild w56 = ((global::Gtk.Table.TableChild)(this.table2 [this.lblDecal]));
			w56.TopAttach = ((uint)(3));
			w56.BottomAttach = ((uint)(4));
			w56.XOptions = ((global::Gtk.AttachOptions)(4));
			w56.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.lblFaceLink = new global::Gtk.Label ();
			this.lblFaceLink.Name = "lblFaceLink";
			this.lblFaceLink.LabelProp = global::Mono.Unix.Catalog.GetString ("Face link:");
			this.table2.Add (this.lblFaceLink);
			global::Gtk.Table.TableChild w57 = ((global::Gtk.Table.TableChild)(this.table2 [this.lblFaceLink]));
			w57.TopAttach = ((uint)(2));
			w57.BottomAttach = ((uint)(3));
			w57.XOptions = ((global::Gtk.AttachOptions)(4));
			w57.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table2.Gtk.Table+TableChild
			this.lblRemoveDecal = new global::Gtk.Button ();
			this.lblRemoveDecal.CanFocus = true;
			this.lblRemoveDecal.Name = "lblRemoveDecal";
			this.lblRemoveDecal.UseUnderline = true;
			// Container child lblRemoveDecal.Gtk.Container+ContainerChild
			global::Gtk.Alignment w58 = new global::Gtk.Alignment (0.5F, 0.5F, 0F, 0F);
			// Container child GtkAlignment.Gtk.Container+ContainerChild
			global::Gtk.HBox w59 = new global::Gtk.HBox ();
			w59.Spacing = 2;
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Image w60 = new global::Gtk.Image ();
			w60.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-delete", global::Gtk.IconSize.Menu);
			w59.Add (w60);
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Label w62 = new global::Gtk.Label ();
			w62.LabelProp = global::Mono.Unix.Catalog.GetString ("Clear");
			w62.UseUnderline = true;
			w59.Add (w62);
			w58.Add (w59);
			this.lblRemoveDecal.Add (w58);
			this.table2.Add (this.lblRemoveDecal);
			global::Gtk.Table.TableChild w66 = ((global::Gtk.Table.TableChild)(this.table2 [this.lblRemoveDecal]));
			w66.LeftAttach = ((uint)(2));
			w66.RightAttach = ((uint)(3));
			w66.XOptions = ((global::Gtk.AttachOptions)(4));
			w66.YOptions = ((global::Gtk.AttachOptions)(4));
			this.paletteNotebook.Add (this.table2);
			global::Gtk.Notebook.NotebookChild w67 = ((global::Gtk.Notebook.NotebookChild)(this.paletteNotebook [this.table2]));
			w67.Position = 1;
			// Notebook tab
			this.lblFacePane = new global::Gtk.Label ();
			this.lblFacePane.Name = "lblFacePane";
			this.lblFacePane.LabelProp = global::Mono.Unix.Catalog.GetString ("Faces");
			this.paletteNotebook.SetTabLabel (this.table2, this.lblFacePane);
			this.lblFacePane.ShowAll ();
			// Container child paletteNotebook.Gtk.Notebook+NotebookChild
			this.table6 = new global::Gtk.Table (((uint)(4)), ((uint)(2)), false);
			this.table6.Name = "table6";
			this.table6.RowSpacing = ((uint)(6));
			this.table6.ColumnSpacing = ((uint)(6));
			// Container child table6.Gtk.Table+TableChild
			this.btnAddLampActor = new global::Gtk.Button ();
			this.btnAddLampActor.Sensitive = false;
			this.btnAddLampActor.CanFocus = true;
			this.btnAddLampActor.Name = "btnAddLampActor";
			this.btnAddLampActor.UseUnderline = true;
			// Container child btnAddLampActor.Gtk.Container+ContainerChild
			global::Gtk.Alignment w68 = new global::Gtk.Alignment (0.5F, 0.5F, 0F, 0F);
			// Container child GtkAlignment.Gtk.Container+ContainerChild
			global::Gtk.HBox w69 = new global::Gtk.HBox ();
			w69.Spacing = 2;
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Image w70 = new global::Gtk.Image ();
			w70.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "stock_3d-light-on", global::Gtk.IconSize.Menu);
			w69.Add (w70);
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Label w72 = new global::Gtk.Label ();
			w72.LabelProp = global::Mono.Unix.Catalog.GetString ("Add lamp actor");
			w72.UseUnderline = true;
			w69.Add (w72);
			w68.Add (w69);
			this.btnAddLampActor.Add (w68);
			this.table6.Add (this.btnAddLampActor);
			global::Gtk.Table.TableChild w76 = ((global::Gtk.Table.TableChild)(this.table6 [this.btnAddLampActor]));
			w76.TopAttach = ((uint)(3));
			w76.BottomAttach = ((uint)(4));
			w76.LeftAttach = ((uint)(1));
			w76.RightAttach = ((uint)(2));
			w76.XOptions = ((global::Gtk.AttachOptions)(4));
			w76.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table6.Gtk.Table+TableChild
			this.lblCeilingHeight = new global::Gtk.Label ();
			this.lblCeilingHeight.Name = "lblCeilingHeight";
			this.lblCeilingHeight.LabelProp = global::Mono.Unix.Catalog.GetString ("Ceiling height");
			this.table6.Add (this.lblCeilingHeight);
			global::Gtk.Table.TableChild w77 = ((global::Gtk.Table.TableChild)(this.table6 [this.lblCeilingHeight]));
			w77.XOptions = ((global::Gtk.AttachOptions)(4));
			w77.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table6.Gtk.Table+TableChild
			this.lblFloorHeight = new global::Gtk.Label ();
			this.lblFloorHeight.Name = "lblFloorHeight";
			this.lblFloorHeight.LabelProp = global::Mono.Unix.Catalog.GetString ("Floor height");
			this.table6.Add (this.lblFloorHeight);
			global::Gtk.Table.TableChild w78 = ((global::Gtk.Table.TableChild)(this.table6 [this.lblFloorHeight]));
			w78.TopAttach = ((uint)(1));
			w78.BottomAttach = ((uint)(2));
			w78.XOptions = ((global::Gtk.AttachOptions)(4));
			w78.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table6.Gtk.Table+TableChild
			this.lblInternalLightning = new global::Gtk.Label ();
			this.lblInternalLightning.Name = "lblInternalLightning";
			this.lblInternalLightning.LabelProp = global::Mono.Unix.Catalog.GetString ("Internal lightning");
			this.table6.Add (this.lblInternalLightning);
			global::Gtk.Table.TableChild w79 = ((global::Gtk.Table.TableChild)(this.table6 [this.lblInternalLightning]));
			w79.TopAttach = ((uint)(2));
			w79.BottomAttach = ((uint)(3));
			w79.XOptions = ((global::Gtk.AttachOptions)(4));
			w79.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table6.Gtk.Table+TableChild
			this.spnCeilingHeight = new global::Gtk.SpinButton (0, 100, 1);
			this.spnCeilingHeight.CanFocus = true;
			this.spnCeilingHeight.Name = "spnCeilingHeight";
			this.spnCeilingHeight.Adjustment.PageIncrement = 10;
			this.spnCeilingHeight.ClimbRate = 1;
			this.spnCeilingHeight.Numeric = true;
			this.table6.Add (this.spnCeilingHeight);
			global::Gtk.Table.TableChild w80 = ((global::Gtk.Table.TableChild)(this.table6 [this.spnCeilingHeight]));
			w80.LeftAttach = ((uint)(1));
			w80.RightAttach = ((uint)(2));
			w80.XOptions = ((global::Gtk.AttachOptions)(4));
			w80.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table6.Gtk.Table+TableChild
			this.spnFloorHeight = new global::Gtk.SpinButton (0, 100, 1);
			this.spnFloorHeight.CanFocus = true;
			this.spnFloorHeight.Name = "spnFloorHeight";
			this.spnFloorHeight.Adjustment.PageIncrement = 10;
			this.spnFloorHeight.ClimbRate = 1;
			this.spnFloorHeight.Numeric = true;
			this.table6.Add (this.spnFloorHeight);
			global::Gtk.Table.TableChild w81 = ((global::Gtk.Table.TableChild)(this.table6 [this.spnFloorHeight]));
			w81.TopAttach = ((uint)(1));
			w81.BottomAttach = ((uint)(2));
			w81.LeftAttach = ((uint)(1));
			w81.RightAttach = ((uint)(2));
			w81.XOptions = ((global::Gtk.AttachOptions)(4));
			w81.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table6.Gtk.Table+TableChild
			this.spnInternalLightning = new global::Gtk.SpinButton (0, 255, 1);
			this.spnInternalLightning.CanFocus = true;
			this.spnInternalLightning.Name = "spnInternalLightning";
			this.spnInternalLightning.Adjustment.PageIncrement = 10;
			this.spnInternalLightning.ClimbRate = 1;
			this.spnInternalLightning.Numeric = true;
			this.table6.Add (this.spnInternalLightning);
			global::Gtk.Table.TableChild w82 = ((global::Gtk.Table.TableChild)(this.table6 [this.spnInternalLightning]));
			w82.TopAttach = ((uint)(2));
			w82.BottomAttach = ((uint)(3));
			w82.LeftAttach = ((uint)(1));
			w82.RightAttach = ((uint)(2));
			w82.XOptions = ((global::Gtk.AttachOptions)(4));
			w82.YOptions = ((global::Gtk.AttachOptions)(4));
			this.paletteNotebook.Add (this.table6);
			global::Gtk.Notebook.NotebookChild w83 = ((global::Gtk.Notebook.NotebookChild)(this.paletteNotebook [this.table6]));
			w83.Position = 2;
			// Notebook tab
			this.lblGeom = new global::Gtk.Label ();
			this.lblGeom.Name = "lblGeom";
			this.lblGeom.LabelProp = global::Mono.Unix.Catalog.GetString ("Geom.");
			this.paletteNotebook.SetTabLabel (this.table6, this.lblGeom);
			this.lblGeom.ShowAll ();
			// Container child paletteNotebook.Gtk.Notebook+NotebookChild
			this.table3 = new global::Gtk.Table (((uint)(4)), ((uint)(2)), false);
			this.table3.Name = "table3";
			this.table3.RowSpacing = ((uint)(6));
			this.table3.ColumnSpacing = ((uint)(6));
			// Container child table3.Gtk.Table+TableChild
			this.label2 = new global::Gtk.Label ();
			this.label2.Name = "label2";
			this.label2.LabelProp = global::Mono.Unix.Catalog.GetString ("Cursor:");
			this.table3.Add (this.label2);
			global::Gtk.Table.TableChild w84 = ((global::Gtk.Table.TableChild)(this.table3 [this.label2]));
			w84.XOptions = ((global::Gtk.AttachOptions)(4));
			w84.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.label3 = new global::Gtk.Label ();
			this.label3.Name = "label3";
			this.label3.LabelProp = global::Mono.Unix.Catalog.GetString ("X:");
			this.table3.Add (this.label3);
			global::Gtk.Table.TableChild w85 = ((global::Gtk.Table.TableChild)(this.table3 [this.label3]));
			w85.TopAttach = ((uint)(1));
			w85.BottomAttach = ((uint)(2));
			w85.XOptions = ((global::Gtk.AttachOptions)(4));
			w85.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.label4 = new global::Gtk.Label ();
			this.label4.Name = "label4";
			this.label4.LabelProp = global::Mono.Unix.Catalog.GetString ("Y:");
			this.table3.Add (this.label4);
			global::Gtk.Table.TableChild w86 = ((global::Gtk.Table.TableChild)(this.table3 [this.label4]));
			w86.TopAttach = ((uint)(2));
			w86.BottomAttach = ((uint)(3));
			w86.XOptions = ((global::Gtk.AttachOptions)(4));
			w86.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.label5 = new global::Gtk.Label ();
			this.label5.Name = "label5";
			this.label5.LabelProp = global::Mono.Unix.Catalog.GetString ("Z:");
			this.table3.Add (this.label5);
			global::Gtk.Table.TableChild w87 = ((global::Gtk.Table.TableChild)(this.table3 [this.label5]));
			w87.TopAttach = ((uint)(3));
			w87.BottomAttach = ((uint)(4));
			w87.XOptions = ((global::Gtk.AttachOptions)(4));
			w87.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.spnCursorX = new global::Gtk.SpinButton (0, 255, 1);
			this.spnCursorX.CanFocus = true;
			this.spnCursorX.Name = "spnCursorX";
			this.spnCursorX.Adjustment.PageIncrement = 10;
			this.spnCursorX.ClimbRate = 1;
			this.spnCursorX.Numeric = true;
			this.table3.Add (this.spnCursorX);
			global::Gtk.Table.TableChild w88 = ((global::Gtk.Table.TableChild)(this.table3 [this.spnCursorX]));
			w88.TopAttach = ((uint)(1));
			w88.BottomAttach = ((uint)(2));
			w88.LeftAttach = ((uint)(1));
			w88.RightAttach = ((uint)(2));
			w88.XOptions = ((global::Gtk.AttachOptions)(4));
			w88.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.spnCursorY = new global::Gtk.SpinButton (0, 255, 1);
			this.spnCursorY.CanFocus = true;
			this.spnCursorY.Name = "spnCursorY";
			this.spnCursorY.Adjustment.PageIncrement = 10;
			this.spnCursorY.ClimbRate = 1;
			this.spnCursorY.Numeric = true;
			this.table3.Add (this.spnCursorY);
			global::Gtk.Table.TableChild w89 = ((global::Gtk.Table.TableChild)(this.table3 [this.spnCursorY]));
			w89.TopAttach = ((uint)(2));
			w89.BottomAttach = ((uint)(3));
			w89.LeftAttach = ((uint)(1));
			w89.RightAttach = ((uint)(2));
			w89.XOptions = ((global::Gtk.AttachOptions)(4));
			w89.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.spnCursorZ = new global::Gtk.SpinButton (0, 255, 1);
			this.spnCursorZ.CanFocus = true;
			this.spnCursorZ.Name = "spnCursorZ";
			this.spnCursorZ.Adjustment.PageIncrement = 10;
			this.spnCursorZ.ClimbRate = 1;
			this.spnCursorZ.Numeric = true;
			this.table3.Add (this.spnCursorZ);
			global::Gtk.Table.TableChild w90 = ((global::Gtk.Table.TableChild)(this.table3 [this.spnCursorZ]));
			w90.TopAttach = ((uint)(3));
			w90.BottomAttach = ((uint)(4));
			w90.LeftAttach = ((uint)(1));
			w90.RightAttach = ((uint)(2));
			w90.XOptions = ((global::Gtk.AttachOptions)(4));
			w90.YOptions = ((global::Gtk.AttachOptions)(4));
			this.paletteNotebook.Add (this.table3);
			global::Gtk.Notebook.NotebookChild w91 = ((global::Gtk.Notebook.NotebookChild)(this.paletteNotebook [this.table3]));
			w91.Position = 3;
			// Notebook tab
			this.label1 = new global::Gtk.Label ();
			this.label1.Name = "label1";
			this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("Cursor");
			this.paletteNotebook.SetTabLabel (this.table3, this.label1);
			this.label1.ShowAll ();
			this.Add (this.paletteNotebook);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Hide ();
			this.lblDuplicateEntity.Clicked += new global::System.EventHandler (this.OnLblDuplicateEntityClicked);
			this.entExtraData.Changed += new global::System.EventHandler (this.OnEntExtraDataChanged);
			this.cmbEditMode.Changed += new global::System.EventHandler (this.OnCmbEditModeChanged);
			this.cboEntities.Changed += new global::System.EventHandler (this.OnCboEntitiesChanged);
			this.btnDeleteMapLink.Clicked += new global::System.EventHandler (this.OnBtnDeleteMapLinkClicked);
			this.btnDeleteEntity.Clicked += new global::System.EventHandler (this.OnBtnDeleteEntityClicked);
			this.btnCreateEntity.Clicked += new global::System.EventHandler (this.OnBtnCreateEntityClicked);
			this.btnBrowseForMapsToLink.Clicked += new global::System.EventHandler (this.OnBtnBrowseForMapsToLinkClicked);
			this.lblRemoveDecal.Clicked += new global::System.EventHandler (this.OnLblRemoveDecalClicked);
			this.FaceColorBtn.ColorSet += new global::System.EventHandler (this.OnFaceColorBtnColorSet);
			this.cmbSelectFace.Changed += new global::System.EventHandler (this.OnCmbSelectFaceChanged);
			this.chkIsDoor.Toggled += new global::System.EventHandler (this.OnChkIsDoorToggled);
			this.chkIsDoor.Clicked += new global::System.EventHandler (this.OnChkIsDoorClicked);
			this.cboLink.Changed += new global::System.EventHandler (this.OnCboLinkChanged);
			this.btnDeleteFaceLink.Clicked += new global::System.EventHandler (this.OnBtnDeleteFaceLinkClicked);
			this.btnBrowseForDecals.Clicked += new global::System.EventHandler (this.OnBtnBrowseForDecalsClicked);
			this.spnInternalLightning.ChangeValue += new global::Gtk.ChangeValueHandler (this.OnSpnInternalLightningChangeValue);
			this.spnInternalLightning.ValueChanged += new global::System.EventHandler (this.OnSpnInternalLightningValueChanged);
			this.spnFloorHeight.ChangeValue += new global::Gtk.ChangeValueHandler (this.OnSpnFloorHeightChangeValue);
			this.spnFloorHeight.ValueChanged += new global::System.EventHandler (this.OnSpnFloorHeightValueChanged);
			this.spnCeilingHeight.ChangeValue += new global::Gtk.ChangeValueHandler (this.OnSpnCeilingHeightChangeValue);
			this.spnCeilingHeight.ValueChanged += new global::System.EventHandler (this.OnSpnCeilingHeightValueChanged);
			this.spnCursorZ.ChangeValue += new global::Gtk.ChangeValueHandler (this.OnSpnCursorZChangeValue);
			this.spnCursorZ.ValueChanged += new global::System.EventHandler (this.OnSpnCursorZValueChanged);
			this.spnCursorY.ChangeValue += new global::Gtk.ChangeValueHandler (this.OnSpnCursorYChangeValue);
			this.spnCursorY.ValueChanged += new global::System.EventHandler (this.OnSpnCursorYValueChanged);
			this.spnCursorX.ChangeValue += new global::Gtk.ChangeValueHandler (this.OnSpnCursorXChangeValue);
			this.spnCursorX.ValueChanged += new global::System.EventHandler (this.OnSpnCursorXValueChanged);
		}
	}
}
